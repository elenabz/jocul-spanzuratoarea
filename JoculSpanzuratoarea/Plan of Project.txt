Current Project: 
	add documentation about: 
	- tables
	- functionality: how it works ?
	- db = origin of dex
	
	- db type: MySQL
	- framework BE + FE : Asp.net + Razor Pages 
	- session : keep data of the session (user first enter in app unic id )
	- ajax : used to make Http requests in js
	- docker : am folosit imagine de MySQL 

Replicate Project:
	- different DB 
	- different FE Framework (Angular)
	- dapper instead of EF 


Readme:
	Razor project
	what packages do I use? MySQL.EFCore
	what DB do I use? MySQL
	UML for structure of project
	describe classes , functions


ToDo:
	add timer
	add auth 

Project Structure
	Folders: Models 
	
	* Pages folder is the default location for Razor Pages files. The files ending with .cshtml are Razor files.
		.cs files are C# class files that are paired with Razor files and are known as PageModel files.
		Not all Razor files have a matching class file. 

	* wwwroot folder is where static files are placed in a .NET Core web application.(css + js folder)
		These files include the CSS style sheets, images and JavaScript files used by the site.
		lib contains third party client-side packages. 
		(BootStrap +
		jQuery - js library +
		jQuery Validation - jQ plugin validation for forms +
		jQuery Unobtrusive Validation - jQuery validation plugin from ASP.NET to work with inputs generated by Razor helpers)
			A helper lets you use a common block of code across multiple page
		
		These packages are managed by LibMan, the default client-side package manager for Razor Pages and MVC applications.

	* Root files
		appsettings.json - A json-based file for application-wide configuration settings
		appsettings.Development.json - A json-based file for application-wide configuration settings that only take effect during development
		Program.cs - The entry point for the Razor Pages application
		RazorPages.csproj - An XML-based file that contains information about the project and is used by the MSBuild system for compilation and publishing

	The bin folder is the default output location for binary files generated when the application is compiled
			(Debug and Release folder that contains a subfolder named netcoreapp[version number],version of .NET Core used to create the application
			netcoreapp3.1)

	The Obj folder is used to store temporary object files and other files that are used to create the final binary during the compilation process.
