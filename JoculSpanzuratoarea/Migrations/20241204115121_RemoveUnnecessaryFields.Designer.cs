// <auto-generated />
using JoculSpanzuratoarea.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JoculSpanzuratoarea.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241204115121_RemoveUnnecessaryFields")]
    partial class RemoveUnnecessaryFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8mb4_0900_ai_ci")
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4");

            modelBuilder.Entity("JoculSpanzuratoarea.Definition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("CreateDate")
                        .HasColumnType("int")
                        .HasColumnName("createDate");

                    b.Property<string>("InternalRep")
                        .HasColumnType("longtext")
                        .HasColumnName("internalRep");

                    b.Property<string>("Lexicon")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("lexicon");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint unsigned")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "CreateDate" }, "CreateDate");

                    b.HasIndex(new[] { "Lexicon" }, "Lexicon");

                    b.HasIndex(new[] { "Status" }, "Status");

                    b.ToTable("Definition", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_romanian_ci");
                });

            modelBuilder.Entity("JoculSpanzuratoarea.Entry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("CreateDate")
                        .HasColumnType("int")
                        .HasColumnName("createDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("description")
                        .HasDefaultValueSql("''");

                    b.Property<bool>("Usable")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("usable");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "Description" }, "description");

                    b.ToTable("Entry", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_romanian_ci");
                });

            modelBuilder.Entity("JoculSpanzuratoarea.EntryDefinition", b =>
                {
                    b.Property<int>("EntryId")
                        .HasColumnType("int")
                        .HasColumnName("entryId");

                    b.Property<int>("DefinitionId")
                        .HasColumnType("int")
                        .HasColumnName("definitionId");

                    b.Property<int>("CreateDate")
                        .HasColumnType("int")
                        .HasColumnName("createDate");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.HasKey("EntryId", "DefinitionId")
                        .HasName("PRIMARY");

                    b.HasIndex("DefinitionId");

                    b.ToTable("EntryDefinition", (string)null);

                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "utf8mb4_romanian_ci");
                });

            modelBuilder.Entity("JoculSpanzuratoarea.EntryDefinition", b =>
                {
                    b.HasOne("JoculSpanzuratoarea.Definition", "Definition")
                        .WithMany("EntryDefinitions")
                        .HasForeignKey("DefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JoculSpanzuratoarea.Entry", "Entry")
                        .WithMany("EntryDefinitions")
                        .HasForeignKey("EntryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Definition");

                    b.Navigation("Entry");
                });

            modelBuilder.Entity("JoculSpanzuratoarea.Definition", b =>
                {
                    b.Navigation("EntryDefinitions");
                });

            modelBuilder.Entity("JoculSpanzuratoarea.Entry", b =>
                {
                    b.Navigation("EntryDefinitions");
                });
#pragma warning restore 612, 618
        }
    }
}
